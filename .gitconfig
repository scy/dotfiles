[user]
	# Set my name, but require me to set the email address manually for each
	# repo. This should hopefully solve the cases where I‚Äôm committing (and
	# pushing) from the wrong address for days.
	# See <https://github.com/scy/dotfiles/issues/9> for rationale.
	name = Tim Weber
	useConfigOnly = true

[interactive]
	singlekey = true

[alias]
	a = add
	# List aliases in a (more) beautiful way. This mainly strips the ‚Äúalias.‚Äù
	# prefix, hides itself from the output, adds color, and pipes the output to
	# `column`, so that it doesn‚Äôt have to rely on the tab character. However,
	# there‚Äôs a fallback to `cat` if `column` is not available on this system.
	al = "! git config --get-regexp '^alias\\.' | sed -n -e 's/^alias\\.al //' -e 's/^alias\\.\\([^ ]*\\) /[1;33m\\1:[m\t/p' | { column -t -s '\t' || cat; }"
	ap = add --patch
	c = commit
	ca = commit --all
	cam = commit --amend
	caam = commit --all --amend
	cl = clone --recurse-submodules
	co = checkout
	d = diff
	ds = diff --staged
	ig = edit-ignore
	l = log
	lp = log --patch
	p = push
	s = status
	st = stash
	stp = stash pop
	u = pull
	# Email addresses (private and business).
	scy = config user.email scy@scy.name
	tw = config user.email mail@timweber.name

[pull]
	# `git pull` should use `rebase` instead of doing a merge commit.
	# This only makes sense if nobody else is working on top of your history
	# before you've pushed it to the same repo you're pulling from.
	# `rebase = merges` would probably be an even better setting, but requires
	# Git ‚â• 2.18, which is too new for Debian stretch. ¬Ø\_(„ÉÑ)_/¬Ø
	rebase = preserve

[credential]
	# Store HTTPS credentials unencrypted on disk, only protected by file system
	# permissions. The rationale is: All disks I use to access private Git repos
	# or to push somewhere should be encrypted anyway, and if the machine is
	# compromised, all hope is lost anyway. This is the simplest and most cross-
	# platform solution.
	helper = store
